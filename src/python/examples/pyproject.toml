[project]
name = "sc4-python-examples"
version = "1.0.0"
description = "Example plugins for the SC4 Python Framework"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "SC4 Python Framework", email = "example@sc4python.dev"}
]
requires-python = ">=3.13"

dependencies = [
    # Core dependencies for SC4 plugins
    "pybind11>=2.11.0",
    
    # Common packages for data analysis
    "numpy>=1.24.0",
    "pandas>=1.5.0",
    
    # For configuration management
    "pyyaml>=6.0",
    # tomli no longer needed since Python 3.13 has built-in tomllib
    
    # Enhanced logging
    "colorlog>=6.7.0",
    
    # Scheduling and timing utilities
    "schedule>=1.2.0",
    
    # Date/time handling
    "python-dateutil>=2.8.0",
    
    # JSON schema validation
    "jsonschema>=4.17.0",
]

[project.optional-dependencies]
# Optional dependencies for advanced features
analysis = [
    "scipy>=1.10.0",
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
]

web = [
    "flask>=2.3.0",
    "requests>=2.28.0",
    "jinja2>=3.1.0",
]

data = [
    "pyarrow>=10.0.0",
    "sqlalchemy>=2.0.0",
    "h5py>=3.8.0",
]

dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

all = [
    "sc4-python-examples[analysis,web,data]"
]

[project.urls]
homepage = "https://github.com/sc4-python-framework/examples"
repository = "https://github.com/sc4-python-framework/examples"
documentation = "https://sc4-python-framework.readthedocs.io/"
changelog = "https://github.com/sc4-python-framework/examples/blob/main/CHANGELOG.md"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
target-version = "py313"
line-length = 100
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"examples/*.py" = ["F401", "F841"]  # Allow unused imports/variables in examples

[tool.black]
target-version = ['py313']
line-length = 100
skip-string-normalization = true

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "examples.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]